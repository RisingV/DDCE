package socket.test;

import java.io.File;
import java.io.FilenameFilter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * @author francis yuan <br>
 * E-mail: yuanjiajun@bdcom.com.cn <br>
 * @version 2012-12-4  <br>
 * Auto-Generated by eclipse Juno <br>
 */

public class SceManager {
	
	public static final DateFormat DATE_FORMAT = 
			new SimpleDateFormat("yyyy-MM-dd-HH-mm-ss"); 
	
	public static final String CURRENT_DIR = System.getProperty("user.dir");
	
	private static final String SCENARIO_DIR = "\\Scenarios\\";
	
	private static final String END_FIX = ".sce";
	
	private static String sceSavePath = CURRENT_DIR + SCENARIO_DIR;
	
	private Map<String, PreProvidedScenario> _preProvidedScenarios;
	
	public SceManager() {
		getSavedSces();
	}
	
	public PreProvidedScenario[] getSceList() {
		if ( null == _preProvidedScenarios || 
				_preProvidedScenarios.isEmpty() ) {
			return new PreProvidedScenario[0];
		}
		
		Collection<PreProvidedScenario> preSces = 
									_preProvidedScenarios.values();
		PreProvidedScenario[] sces = new PreProvidedScenario[_preProvidedScenarios.size()];
		preSces.toArray(sces);
		
		return sces;
	}
	
	private void getSavedSces() {
		File sceDir = new File(sceSavePath);
		if (sceDir.isDirectory()) {
			File[] savedFiles = sceDir.listFiles(
					new FilenameFilter() {
						public boolean accept(File dir, String name) {
							if ( name.endsWith( END_FIX ) ) {
								return true;
							} else {
								return false;
							}
						}
					}
					);
			for ( File savedFile : savedFiles ) {
				Object obj = CacheUtils.getContentCache(savedFile);
				PreProvidedScenario sce = (PreProvidedScenario) obj;
				if ( null == _preProvidedScenarios ) {
					_preProvidedScenarios = new HashMap<String, PreProvidedScenario>();
				}
				_preProvidedScenarios.put(
						sce.getScenarioName(),
						sce
						);
			}
		}
	 }
	
	public void addPreProvidedScenario(PreProvidedScenario scenario) {
		addPreProvidedScenario(
				scenario.getScenarioName(),
				scenario
				);
	}
	
	public void addPreProvidedScenario(String scenarioName, 
			PreProvidedScenario scenario) {
		
		if (null == scenarioName) {
			scenarioName = "SEC" + DATE_FORMAT.format(new Date());
			scenario.setScenarioName(scenarioName);
		}
		
		if ( null == _preProvidedScenarios ) {
			_preProvidedScenarios = new HashMap<String, PreProvidedScenario>();
		}
		
		_preProvidedScenarios.put(
				scenarioName,
				scenario
				);
		
		saveDefindScenario(scenarioName);
	}
	
	public void saveDefindScenario(String scenarioName) {
		PreProvidedScenario sce = null;
		if ( null != _preProvidedScenarios ) {
			sce = _preProvidedScenarios.get(scenarioName);
			if (null != sce) {
				CacheUtils.saveContentCache(
						sce,
						getPathToSave(
								sce.getScenarioName()
								)
						);
			} 
		}
	}
	
	private static String getPathToSave(String sName) {
		StringBuffer sb = new StringBuffer();
		sb.append(CURRENT_DIR)
		  .append(SCENARIO_DIR);
		File sceDir = new File(sb.toString());
		if ( !sceDir.exists() ) {
			sceDir.mkdir();
		}
	    sb.append(sName)
		  .append(END_FIX);
		
		return sb.toString();
	}
	
	public void removeDefindScenario(String scenarioName) {
		if ( null == _preProvidedScenarios ) {
			return;
		}
		
		_preProvidedScenarios.remove(scenarioName); 
		CacheUtils.clearCache(
				getPathToSave(scenarioName)
				);
	}
	
	public void wrapSce(String revStr, PreProvidedScenario scenario) {
		String spt = CommuniConstants.SEPARATOR;
		int si = revStr.indexOf(spt);
		String key = revStr.substring(0, si);
		String value = revStr.substring(si + spt.length());
		if ( key.equals(value) ) {
			scenario.setScenarioName(key);
			return;
		}
		scenario.putAttr(key, value);
	}
	
}
