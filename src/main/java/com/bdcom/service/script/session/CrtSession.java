package com.bdcom.service.script.session;

import com.bdcom.util.log.ErrorLogger;
import com.bdcom.service.script.ScriptXmlConfConstants;
import com.bdcom.util.StringUtil;

import java.io.IOException;

/**
 * @author francis yuan <br>
 * E-mail: yuanjiajun@bdcom.com.cn <br>
 * @version 2012-12-10 <br>
 * Auto-Generated by eclipse Juno <br>
 */

public class CrtSession implements ScriptXmlConfConstants {
	
	private CrtSession crts = this;
	
	private Process process;
	
	private String crtSessionName;
	
	private String interpreterPath;
	
	private boolean running = false;

	public String getInterpreterPath() {
		return interpreterPath;
	}

	public void setInterpreterPath(String interpreterPath) {
		this.interpreterPath = interpreterPath;
	}

	public String getCrtSessionName() {
		return crtSessionName;
	}

	public void setCrtSessionName(String crtSessionName) {
		this.crtSessionName = crtSessionName;
	}

	public boolean isRunning() {
		return running;
	}

	public void setRunning(boolean running) {
		this.running = running;
	}
	
	public void runScript(String scriptPath) throws IOException, InterruptedException {
		String cmd = getCmd(interpreterPath, crtSessionName, scriptPath);
		System.out.println(cmd);
		if ( running ) {
			killRunningProcess();
		}
		
		if ( StringUtil.isNotBlank(cmd) ) {
			running = true;
			process = Runtime.getRuntime().exec(cmd);
			waitingThread();
		}
	}
	
	public void killRunningProcess() {
		if ( null != process ) {
			running = false;
			process.destroy();
		} else {
			running = false;
		}
	}
	
	private void waitingThread() {
		new Thread(
				new Runnable() {
					@Override
					public void run() {
						if ( null != process) {
							int status = 0;
							try {
								status = process.waitFor();
							} catch (InterruptedException e) {
								ErrorLogger.log(e.getMessage() +
                                        "exit code: " + status);
							}
						}
						crts.setRunning(false);
					}
				}
				).start();
	}
	
	public String getCmd(String interpreterPath, String crtSessionName, String scriptPath) {
		StringBuffer sb = new StringBuffer();
		
		if (StringUtil.isNotBlank(interpreterPath) 
				&& StringUtil.isNotBlank(scriptPath) ) {
			sb.append(interpreterPath)
			  .append(_BLANK)
			  .append(_CRT_ARG)
			  .append(_BLANK)
			  .append(scriptPath)
			  .append(_BLANK)
			  .append("/S")
			  .append(_BLANK)
			  .append(crtSessionName);
		}
		
		return sb.toString();
//		return scriptPath;
	}
}
