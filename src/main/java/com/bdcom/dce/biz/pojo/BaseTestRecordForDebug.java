package com.bdcom.dce.biz.pojo;

import com.bdcom.dce.util.log.ErrorLogger;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * @author francis yuan <br>
 * E-mail: yuanjiajun@bdcom.com.cn <br>
 * @version 2013-3-15 <br>
 * Auto-Generated by eclipse Juno <br>
 */

public class BaseTestRecordForDebug extends BaseTestRecord {
	
	private static final long serialVersionUID = 105028390062624487L;

	private String workTime;
	
	public void setWorkTime(String workTime) {
		this.workTime = workTime;
	}
	
	public String getWorkTime() {
		return workTime;
	}
	
	private static String fixJsonStr(String str) {
		str = str.trim();
		if (str.startsWith("[") || str.endsWith("]")) {
			return str.substring(1,str.length() -1);
		}
		return str;
	}
	
	public static BaseTestRecordForDebug getRecord4DbyJsonStr(String str) {
		str = fixJsonStr(str);
		BaseTestRecordForDebug dr = null;
		JSONObject json = null;
		try {
			json = new JSONObject(str);
		} catch (JSONException e) {
			json = null;
			ErrorLogger.log(e.getMessage());
		} finally {
			if ( null != json ) {
				dr = json2pojo(json);
			}
		}
		return dr;
	}
	
	public static BaseTestRecordForDebug[] getRecordArray(String str) {
		str = fixJsonStr(str);
		BaseTestRecordForDebug[] drArray = null;
		JSONArray jsonArray = null;
		try {
			jsonArray = new JSONArray(str);
		} catch (JSONException e) {
			jsonArray = null;
			ErrorLogger.log(e.getMessage());
		} finally {
			if ( null != jsonArray ) {
				drArray = new BaseTestRecordForDebug[jsonArray.length()];
				try {
					for (int i=0; i < drArray.length; i++) {
						drArray[i] = json2pojo(jsonArray.getJSONObject(i));
					}
				} catch (JSONException e) {
					drArray = null;
					ErrorLogger.log(e.getMessage());
				} 
			}
		}
		return drArray;
	}
	
	private static BaseTestRecordForDebug json2pojo(JSONObject json) {
		BaseTestRecordForDebug dr = new BaseTestRecordForDebug();
		try {
			dr.setBeginTime(json.getString("begintime"));
			dr.setConsoleName(json.getString("terminalname"));
			dr.setEndTime(json.getString("endtime"));
			dr.setHardwareInfo(json.getString("hardwareinfo"));
			dr.setId(json.getString("id"));
			dr.setMac(json.getString("mac"));
			dr.setMemo(json.getString("memo"));
			dr.setModelType(json.getString("version"));
			dr.setRandomID(json.getString("randomID"));
			dr.setScript(json.getString("script"));
			dr.setSerialNumber(json.getString("subStrateNo"));
			dr.setSoftwareInfo(json.getString("softwareinfo"));
			dr.setStatus(json.getString("isPass"));
			dr.setStep(json.getString("step"));
			dr.setTesterNum(json.getString("testerID"));
			dr.setType(json.getString("testtype"));
			dr.setVerOfEPROM(json.getString("epromversion"));
			dr.setVolOfDRam(json.getString("sdramroom"));
			dr.setVolOfFlash(json.getString("flashroom"));
			
			JSONObject workTime = json.getJSONObject("workTime");
			String month = workTime.getString("month");
			String day = workTime.getString("date");
			String hour = workTime.getString("hours");
			String mini = workTime.getString("minutes");
			StringBuffer sb = new StringBuffer();
			
			sb.append(month).append('.').append(day)
			  .append(' ').append(hour).append(':')
			  .append(mini);
			dr.setWorkTime(sb.toString());
		} catch (JSONException e) {
			dr = null;
			ErrorLogger.log(e.getMessage());
		}
		return dr;
	}
}

/*
 	[
	   {
	      "alert":null,
	      "baseID":"",
	      "begintime":null,
	      "endtime":null,
	      "epromversion":"",
	      "flashroom":"",
	      "hardwareinfo":"",
	      "id":1,
	      "isPass":true,
	      "logPath":"",
	      "mac":"",
	      "memo":"",
	      "randomID":"",
	      "remark":"",
	      "script":"",
	      "sdramroom":"",
	      "softwareinfo":"",
	      "step":"",
	      "subStrateNo":"0144302C00001",
	      "subStrateType":"S3524B(A)",
	      "terminalname":"",
	      "testerID":"root",
	      "testtype":"",
	      "version":"",
	      "workTime":{
	         "date":14,
	         "day":4,
	         "hours":17,
	         "minutes":12,
	         "month":2,
	         "nanos":893000000,
	         "seconds":31,
	         "time":1363252351893,
	         "timezoneOffset":-480,
	         "year":113
	      }
	   }
	]
 * */
