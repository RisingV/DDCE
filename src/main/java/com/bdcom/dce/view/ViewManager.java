package com.bdcom.dce.view;

import com.bdcom.dce.sys.Applicable;
import com.bdcom.dce.sys.ApplicationConstants;
import com.bdcom.dce.util.LocaleUtil;
import com.bdcom.dce.util.logger.ErrorLogger;
import com.bdcom.dce.view.itester.ITesterFrame;
import com.bdcom.dce.view.resource.ResourceMgrFrame;
import com.bdcom.dce.view.scripttest.ScriptTestFrame;
import com.bdcom.dce.view.util.ViewUtil;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import java.awt.*;
import java.util.Enumeration;

/**
 * @author francis yuan <br>
 * E-mail: yuanjiajun@bdcom.com.cn <br>
 * @version 2012-11-23 <br>
 * Auto-Generated by eclipse Juno <br>
 */

public class ViewManager implements ApplicationConstants {
	
	private static final String IMAGE_PATH = "/images/logo.png";
    private static final String SCRIPT_TEST = "Script Test";

	private LoginFrame loginFrame;
	
	private MainFrame mainFrame;
	
	//private ScenarioMgrFrame smTab;
	//private SubmitFrame submitTab;
	//private ScriptMgrFrame scmTab;
	//private ScriptList scriptListTab;

    private ScriptTestFrame scriptTestFrameTab;
    private ResourceMgrFrame resourceMgrFrameTab;
    private ITesterFrame itesterTab;

    private final Applicable app;

	public ViewManager( Applicable app ) {
        this.app = app;
		init();
	}
	
	public void display() {
		loginFrame.display();
	}
	
	public void reinit() {
		init();
	}
	
	private void init() {
		Image im = ViewUtil.getImage(IMAGE_PATH);
		
		mainFrame = (MainFrame) getCompo(COMPONENT.MAIN_FRAME);
		loginFrame = (LoginFrame) getCompo(COMPONENT.LOGIN_FRAME);
//		smTab = (ScenarioMgrFrame) getCompo(COMPONENT.SCENARIO_MGR_FRAME);
//		submitTab = (SubmitFrame) getCompo(COMPONENT.SUBMIT_FRAME);
//		scmTab = (ScriptMgrFrame) getCompo(COMPONENT.SCRIPT_MGR_FRAME );
		//scriptListTab = (ScriptList) getCompo(COMPONENT.SCRIPT_LIST);
        scriptTestFrameTab = (ScriptTestFrame) getCompo(COMPONENT.SCRIPT_TEST_FRAME);
        resourceMgrFrameTab = (ResourceMgrFrame) getCompo(COMPONENT.RESOURCE_LIST);
        itesterTab = (ITesterFrame) getCompo(COMPONENT.ITESTER_FRAME);


//		smTab.setScenarioListRefreshHook(
//	    		submitTab.getScenarioListRefreshHook()
//	    		);
//		smTab.setTabTitle(
//				getLocalName( SCE_MANAGEMENT )
//				);
//		smTab.setTabTip(
//				getLocalName( SCE_MANAGEMENT )
//				);
//
//		submitTab.setTabTitle(
//				getLocalName( SUBMIT_REC )
//				);
//		submitTab.setTabTip(
//				getLocalName( SUBMIT_REC )
//				);
//
//		scmTab.setTabTitle(
//				getLocalName( SCRIPT_MANGEMENT )
//				);
//		scmTab.setTabTip(
//				getLocalName(SCRIPT_MANGEMENT )
//				);
		
//		scriptListTab.setTabTitle(
//				getLocalName( SCRIPT_LIST )
//				);

        resourceMgrFrameTab.setTabTitle( getLocalName( RESOURCE_LIST ) );
        scriptTestFrameTab.setTabTitle( getLocalName( SCRIPT_TEST ) );
		
//		mainFrame.addViewTab(submitTab);
        mainFrame.addViewTab( scriptTestFrameTab );
        mainFrame.addViewTab(itesterTab);
//		mainFrame.addRootViewTab(smTab);
//		mainFrame.addRootViewTab(scmTab);
		//mainFrame.addRootViewTab(scriptListTab);
        mainFrame.addRootViewTab(resourceMgrFrameTab);
//		mainFrame.addRefresher(smTab.getScenarioListRefreshHook());
//		mainFrame.addRefresher(submitTab.getFcAddHook());
//		mainFrame.addRefresher(scmTab.getScriptListRefreshHook());
		
		loginFrame.setImage(im);
		mainFrame.setImage(im);
		
//      submitTab.setMsgTable(mainFrame.getMsgTable());
//		mainFrame.init(); //can't add viewTab after int() called
		ViewUtil.centerWindow(loginFrame);		
		
	}
	
	public static void initLookAndFeel() {
		UIManager.put("swing.boldMetal", Boolean.FALSE);
        String song = LocaleUtil.getLocalName( "Song Typeface" );
        Font f = new Font( song, Font.PLAIN, 12 );
        initGlobalFont(f);
		try {
			UIManager.setLookAndFeel(UIManager
					.getSystemLookAndFeelClassName() );
		} catch (ClassNotFoundException e) {
			ErrorLogger.log(e.getMessage());
		} catch (InstantiationException e) {
			ErrorLogger.log(e.getMessage());
		} catch (IllegalAccessException e) {
			ErrorLogger.log(e.getMessage());
		} catch (UnsupportedLookAndFeelException e) {
			ErrorLogger.log(e.getMessage());
		}
	}
	
	private String getLocalName(String name) {
		return LocaleUtil.getLocalName(name);
	}

    private Object getCompo(String name) {
        return app.getAttribute( name );
    }

    private static void initGlobalFont(Font font) {
        FontUIResource fontRes = new FontUIResource(font);
        for (Enumeration<Object> keys = UIManager.getDefaults().keys();
             keys.hasMoreElements(); ) {
            Object key = keys.nextElement();
            Object value = UIManager.get(key);
            if (value instanceof FontUIResource) {
                UIManager.put(key, fontRes);
            }
        }
    }
	
}
